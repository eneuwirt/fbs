<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/aop 
	                  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	                  http://www.springframework.org/schema/beans
                      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                      http://www.springframework.org/schema/context
                      http://www.springframework.org/schema/context/spring-context-3.0.xsd
                      http://www.springframework.org/schema/lang
                      http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
                      http://www.springframework.org/schema/tx 
                      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                      http://www.springframework.org/schema/util 
                      http://www.springframework.org/schema/util/spring-util-3.0.xsd">


  <!-- Use annotations to configure our components -->
  <context:annotation-config />
  <context:component-scan base-package="com.fbs.web.vaadin" />
  <tx:annotation-driven />

  <!-- Sample RDBMS data source that would exist in any application, not Shiro related. -->
  <bean id="dataSourceSecurity" class="org.springframework.jndi.JndiObjectFactoryBean">
    <property name="jndiName" value="java:comp/env/jdbc/auth" />
    <property name="resourceRef" value="true" />
  </bean>

  <bean id="parentDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" abstract="true">
    <property name="driverClassName" value="org.hsqldb.jdbcDriver" />
    <property name="username" value="sa" />
  </bean>

  <bean id="dataSource_0" parent="parentDataSource">
    <property name="url" value="jdbc:hsqldb:mem:tenant_0" />
  </bean>

  <bean id="dataSource_1" parent="parentDataSource">
    <property name="url" value="jdbc:hsqldb:mem:tenant_1" />
  </bean>

  <bean id="dataSource_2" parent="parentDataSource">
    <property name="url" value="jdbc:hsqldb:mem:dataSource_2" />
  </bean>

  <bean id="catalog" class="com.fbs.datasource.CatalogImpl" />

  <bean id="dataSource" class="com.fbs.datasource.TenantRoutingDataSource">
    <property name="targetDataSources">
      <map key-type="java.lang.String">
        <entry key="0" value-ref="dataSource_0" />
        <entry key="1" value-ref="dataSource_1" />
        <entry key="2" value-ref="dataSource_2" />
      </map>
    </property>
    <property name="defaultTargetDataSource" ref="dataSource_0" />
  </bean>

  <!-- Populates the sample database with sample users and roles. -->
  <bean id="itemDataPopulator_0" class="com.fbs.datasource.ItemDataPopulator">
    <property name="dataSource" ref="dataSource_0" />
    <property name="client" value="0" />
    <!-- Interesting behavior, the default schema has already been created by JPA/Hibernate -->
    <property name="createSchema" value="false" />
  </bean>
  <bean id="itemDataPopulator_1" class="com.fbs.datasource.ItemDataPopulator">
    <property name="dataSource" ref="dataSource_1" />
    <property name="client" value="1" />
  </bean>
  <bean id="itemDataPopulator_2" class="com.fbs.datasource.ItemDataPopulator">
    <property name="dataSource" ref="dataSource_2" />
    <property name="client" value="2" />
  </bean>
  <!-- Until here -->

  <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="jpaVendorAdapter">
      <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform" value="org.hibernate.dialect.HSQLDialect" />
        <property name="showSql" value="true" />
        <!-- hibernate.hbm2ddl.auto=update -->
        <property name="generateDdl" value="true" />
      </bean>
    </property>
  </bean>

  <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    <property name="entityManagerFactory" ref="entityManagerFactory" />
  </bean>
  
  <bean id="tenantService" class="com.fbs.security.service.impl.TenantServiceImpl">
    <property name="dataSource" ref="dataSourceSecurity" />
  </bean>
</beans>
